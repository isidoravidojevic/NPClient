package napredno.programiranje.view.form;

import java.util.List;

import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

import napredno.programiranje.communication.Communication;
import napredno.programiranje.communication.Response;
import napredno.programiranje.domain.City;
import napredno.programiranje.domain.Customer;

public class FrmAddEditCustomer extends JDialog {

	Customer customer;
    FormMode formMode;
    FrmViewCustomers formViewCustomers;
    List<City> cities;
    
    public FrmAddEditCustomer(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);
        btnSaveEditChanges.setVisible(false);
        formMode = FormMode.FORM_ADD;
        fillCombobox();
    }

    public FrmAddEditCustomer(java.awt.Frame parent, boolean modal, Customer customer, FrmViewCustomers formViewCustomers) {
        super(parent, modal);
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);
        populateEditForm(customer);
        this.customer = customer;
        this.formViewCustomers = formViewCustomers;
        btnAddCustomer.setVisible(false);
        formMode = FormMode.FORM_EDIT;
        btnCancel.setText("Nazad");
        setTitle("Izmena podataka kupca");
        jLabel5.setText("Izmenite podatke o kupcu:");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtCustomerName = new javax.swing.JTextField();
        txtAddress = new javax.swing.JTextField();
        txtVATNumber = new javax.swing.JTextField();
        txtCompanyNumber = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        btnAddCustomer = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnSaveEditChanges = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Kreiranje kupca");

        jLabel1.setText("Ime kupca:");

        jLabel2.setText("Adresa:");

        jLabel3.setText("PIB:");

        jLabel4.setText("Maticni broj:");

        jLabel6.setText("Grad:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtCustomerName)
                    .addComponent(txtAddress)
                    .addComponent(txtVATNumber)
                    .addComponent(txtCompanyNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtVATNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtCompanyNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        btnAddCustomer.setText("Dodaj");
        btnAddCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCustomerActionPerformed(evt);
            }
        });

        btnCancel.setText("Poništi");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnSaveEditChanges.setText("Sačuvaj izmene");
        btnSaveEditChanges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveEditChangesActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel5.setText("Unesite podatke o kupcu:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(btnAddCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(btnSaveEditChanges, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSaveEditChanges, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {                                          
        switch (formMode) {
            case FORM_ADD:
                txtAddress.setText("");
                txtCompanyNumber.setText("");
                txtCustomerName.setText("");
                txtVATNumber.setText("");
                break;
            case FORM_EDIT:
                this.dispose();
                break;
            default:
                throw new AssertionError();
        }
    }                                         

    private void btnAddCustomerActionPerformed(java.awt.event.ActionEvent evt) {                                               
        try{
            String customerName = txtCustomerName.getText();
            String address = txtAddress.getText();
            String vatNumber = txtVATNumber.getText();
            String companyNumber = txtCompanyNumber.getText();
            String cityCmb = jComboBox1.getSelectedItem().toString();
            
            validateForm(customerName, address, vatNumber, companyNumber);
            
            Customer customer = new Customer();
            customer.setCustomerName(customerName);
            customer.setAddress(address);
            customer.setVATnumber(vatNumber);
            customer.setCompanyNumber(companyNumber);
            
            cities.forEach(city -> {
            	if(city.getCityName().equals(cityCmb)) {
            		customer.setCity(city);
            	}
            });
            
            Response response = Communication.getInstance().addCustomer(customer);
            if(response.getException() == null){
                int number = JOptionPane.showConfirmDialog(this, "Uspešno dodat kupac. Da li želite da dodate još jednog kupca?", "Dodat kupac", JOptionPane.YES_NO_OPTION);
                    if (number == 1) {
                        this.dispose();
                    }
                    txtAddress.setText("");
                    txtCompanyNumber.setText("");
                    txtCustomerName.setText("");
                    txtVATNumber.setText("");
                    jComboBox1.setSelectedIndex(0);
            }
        } catch (Exception ex){
            JOptionPane.showMessageDialog(this, "Sistem ne moze da zapamti kupca.\n" + ex.getMessage());
        }
    }                                              

    private void btnSaveEditChangesActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        try{
            String customerName = txtCustomerName.getText();
            String address = txtAddress.getText();
            String vatNumber = txtVATNumber.getText();
            String companyNumber = txtCompanyNumber.getText();
            String cityCmb = jComboBox1.getSelectedItem().toString();
            
            validateForm(customerName, address, vatNumber, companyNumber);
            
            customer.setCustomerName(customerName);
            customer.setAddress(address);
            customer.setVATnumber(vatNumber);
            customer.setCompanyNumber(companyNumber);
            
            cities.forEach(city -> {
            	if(city.getCityName().equals(cityCmb)) {
            		customer.setCity(city);
            	}
            });
            
            int number = Communication.getInstance().editCustomer(customer);
            
            if(number > 0){
                JOptionPane.showMessageDialog(this, "Sistem je zapamtio kupca.", "Uspešna izmena", JOptionPane.INFORMATION_MESSAGE);
                if(formViewCustomers != null){
                    formViewCustomers.refreshTable();
                }
                this.dispose();
            }
            else{
                JOptionPane.showMessageDialog(this, "Sistem ne može da zapamti kupca.", "Greška", JOptionPane.ERROR_MESSAGE);
            }
            
        } catch (Exception ex){
            JOptionPane.showMessageDialog(this, "Sistem ne moze da azurira kupca." + ex.getMessage());
        }
    }                                                  

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmAddEditCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmAddEditCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmAddEditCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmAddEditCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmAddEditCustomer dialog = new FrmAddEditCustomer(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btnAddCustomer;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSaveEditChanges;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtCompanyNumber;
    private javax.swing.JTextField txtCustomerName;
    private javax.swing.JTextField txtVATNumber;
    // End of variables declaration                   
    
    private void validateForm(String customerName, String address, String vatNumber, String companyNumber) throws Exception {
        String errorMessage = "";
        if (customerName.isEmpty()) {
            errorMessage += "Naziv kupca mora biti popunjen!\n";
        }
        if (address.isEmpty()) {
            errorMessage += "Nabavna cena mora biti popunjena!\n";
        }
        if (vatNumber.isEmpty()) {
            errorMessage += "Prodajna cena mora biti popunjena!\n";
        }
        if (companyNumber.isEmpty()) {
            errorMessage += "Količina mora biti popunjena!\n";
        }
        try {
            int VATnumberInt = Integer.parseInt(vatNumber);
            if(vatNumber.length() != 9){
                errorMessage += "PIB mora imati 9 cifara!\n";
            }
        } catch (NumberFormatException ex){
            errorMessage += "PIB mora biti broj!\n";
        }
        try {
            int companyNumberInt = Integer.parseInt(companyNumber);
            if(companyNumber.length() != 8){
                errorMessage += "Matični broj mora imati 8 cifara!\n";
            }
        } catch (NumberFormatException ex){
            errorMessage += "Matični broj mora biti broj!\n";
        }
        if (!errorMessage.isEmpty()) {
            throw new Exception(errorMessage);
        }
    }
    
    private void populateEditForm(Customer customer){
        try {
        	txtCustomerName.setText(customer.getCustomerName());
            txtAddress.setText(customer.getAddress());
            txtVATNumber.setText(customer.getVATnumber());
            txtCompanyNumber.setText(customer.getCompanyNumber());
            
			fillCombobox();
			String cityDb = customer.getCity().getCityName();
	        cities.forEach(city -> {
	        	if(city.getCityName().equals(cityDb)) {
	        		jComboBox1.setSelectedItem(cityDb);
	        	}
	        });
		} catch (Exception e) {
			e.printStackTrace();
		}
        
    }

    private void fillCombobox() {
    	try {
    		cities = Communication.getInstance().getAllCities();
			cities.forEach(city -> {
				jComboBox1.addItem(city.getCityName());
			});
			
		} catch (Exception e) {
			e.printStackTrace();
		}
    }
}
